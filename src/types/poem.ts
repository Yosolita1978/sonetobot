// types/poem.ts

/**
 * Main Poem interface - represents a poem as stored in the database
 * Includes all fields including database-generated ones
 */
export interface Poem {
    id: number;                    // Auto-generated by Supabase
    title: string;                 // Poem title
    author: string;                // Poet's name
    excerpt: string;               // The poem text/excerpt
    scraped_date: string;          // ISO date string from database
    used: boolean;                 // Whether this poem has been posted
    posted_date: string | null;    // ISO date string when posted, null if not posted
  }
  
  /**
   * New Poem interface - for inserting fresh poems into database
   * Excludes auto-generated fields (id) and optional tracking fields
   */
  export interface NewPoem {
    title: string;
    author: string;
    excerpt: string;
    scraped_date: string;          // ISO date string
    used?: boolean;                // Optional, defaults to false
  }
  
  /**
   * Scraped Poem - raw data from the scraping process
   * Before it gets stored in database
   */
  export interface ScrapedPoem {
    title: string;
    author: string;
    excerpt: string;
  }
  
  /**
   * API Response interfaces for consistent endpoint responses
   */
  export interface ApiResponse<T = any> {
    success: boolean;
    data?: T;
    error?: string;
    message?: string;
  }
  
  /**
   * Scraping operation result
   */
  export interface ScrapeResult {
    poems_found: number;
    poems_saved: number;
    duplicates_skipped: number;
    errors: string[];
  }
  
  /**
   * Posting operation result
   */
  export interface PostResult {
    posted: boolean;
    poem_id?: number;
    mastodon_id?: string;          // ID from Mastodon API response
    error?: string;
  }